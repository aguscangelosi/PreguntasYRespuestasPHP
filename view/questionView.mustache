<div class="text-center bg-light-subtle">
    <h1 class="p-3">Pregunta</h1>

    <p class="fs-3 fw-semibold">{{enunciado}}</p>
    <p class="fw-bold">Dificultad: {{dificultad}}</p>

    <p class="fs-6 fw-medium">Selecciona la respuesta</p>
    <p id="timer" class="text-danger fs-5 fw-bold">Tiempo: 10 segundos</p> <!-- Temporizador visible -->

    <ul id="respuestas" class="list-group">
        {{#respuestas}}
            <li>
                <div class="d-grid gap-2 col-6 mx-auto">
                    <button id="answer-{{answer_id}}" class="btn btn-outline-dark p-3 m-1 respuesta-btn" onclick="sendQuestion({{answer_id}})">
                        {{texto_respuesta}}
                    </button>
                </div>
            </li>
        {{/respuestas}}
    </ul>
</div>

<div id="resultado" style="display: flex; justify-content: center; align-items: center; padding-bottom: 10px;flex-direction: column"></div>
<input type="hidden" value="{{idMatch}}" id="idMatch">
<input type="hidden" value="{{question_id}}" id="question_id">

<script>
    let timeLeft = 10;
    const timerDisplay = document.getElementById('timer');
    const countdownInterval = setInterval(() => {
        timeLeft--;
        timerDisplay.innerText = `Tiempo: ${timeLeft} segundos`;

        if (timeLeft <= 0) {
            clearInterval(countdownInterval);
            disableButtons(); // Desactiva y pinta de rojo los botones al expirar el tiempo
            document.getElementById('resultado').innerHTML = '<p class="text-danger">El tiempo para responder ha expirado.</p>';
            createForm('/PreguntasYRespuestasPHP/game/finish', document.getElementById('idMatch').value, 'Finalizar partida', 'btn-danger');
        }
    }, 1000);

    function disableButtons() {
        let buttons = document.querySelectorAll('.respuesta-btn');
        buttons.forEach(button => {
            button.disabled = true;
            button.classList.remove('btn-outline-dark');
            button.classList.add('btn-danger');
        });
    }

    function sendQuestion(selectedAnswerId) {
        clearInterval(countdownInterval);

        let idMatch = document.getElementById('idMatch').value;
        let idQuestion = document.getElementById('question_id').value;

        let data = new FormData();
        data.append('idMatch', idMatch);
        data.append('idQuestion', idQuestion);
        data.append('idResponse', selectedAnswerId);

        fetch('/PreguntasYRespuestasPHP/game/sendQuestion', {
            method: 'POST',
            body: data
        })
                .then(response => {
                    if (!response.ok) throw new Error('Error en la solicitud');
                    return response.json();
                })
                .then(result => {
                    if (result.error === 'timeout') {
                        disableButtons();
                        document.getElementById('resultado').innerHTML = '<p class="text-danger">El tiempo para responder ha expirado.</p>';
                        createForm('/PreguntasYRespuestasPHP/game/finish', idMatch, 'Finalizar partida', 'btn-danger');
                        return;
                    }

                    let correctAnswerId = result.answer_id;
                    let correct = result.correct;

                    let buttons = document.querySelectorAll('.respuesta-btn');
                    buttons.forEach(button => {
                        button.disabled = true;
                        let answerId = button.id.split('-')[1];
                        if (parseInt(answerId) === correctAnswerId) {
                            button.classList.remove('btn-outline-dark');
                            button.classList.add('btn-success');
                        } else if (parseInt(answerId) === selectedAnswerId) {
                            button.classList.remove('btn-outline-dark');
                            button.classList.add('btn-danger');
                        }
                    });

                    if (correct) {
                        createForm('/PreguntasYRespuestasPHP/game/play', idMatch, 'Continuar', 'btn-primary');
                    } else {
                        createForm('/PreguntasYRespuestasPHP/game/finish', idMatch, 'Finalizar partida', 'btn-danger');
                    }

                    // Agregar el botón de "Reportar pregunta" siempre después de responder
                    createReportButton(idQuestion);
                })
                .catch(error => {
                    console.error('Error:', error);
                    document.getElementById('resultado').innerHTML = '<p class="text-danger">Error al enviar la respuesta.</p>';
                });
    }

    function createForm(actionUrl, idMatch, buttonText, buttonClass) {
        let form = document.createElement('form');
        form.method = 'POST';
        form.action = actionUrl;

        let input = document.createElement('input');
        input.type = 'hidden';
        input.name = 'idMatch';
        input.value = idMatch;

        let button = document.createElement('button');
        button.type = 'submit';
        button.classList.add('btn', 'mt-3', buttonClass);
        button.innerText = buttonText;

        form.appendChild(input);
        form.appendChild(button);
        document.getElementById('resultado').appendChild(form);
    }

    function createReportButton(idQuestion) {
        let reportButton = document.createElement('button');
        reportButton.classList.add('btn', 'btn-warning', 'mt-3');
        reportButton.innerText = 'Reportar Pregunta';
        reportButton.onclick = () => {
            // Crear una ventana emergente para ingresar una descripción
            let description = prompt('Describe el problema con la pregunta:');
            if (!description) return; // Salir si no se da una descripción

            let data = new FormData();
            data.append('question_id', idQuestion);
            data.append('description', description); // Agregar descripción

            fetch('/PreguntasYRespuestasPHP/game/reportQuestion', {
                method: 'POST',
                body: data
            })
                    .then(response => response.json())
                    .then(result => {
                        if (result.status === 'success') {
                            document.getElementById('resultado').innerHTML += '<p class="text-success">Pregunta reportada exitosamente.</p>';
                        } else {
                            document.getElementById('resultado').innerHTML += `<p class="text-danger">Error: ${result.message}</p>`;
                        }
                    })
                    .catch(error => console.error('Error al reportar la pregunta:', error));
        };

        document.getElementById('resultado').appendChild(reportButton);
    }
</script>
